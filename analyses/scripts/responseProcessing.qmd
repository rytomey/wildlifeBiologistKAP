---
title: "Processing, Summarizing, and Converting Responses"
date: "`r Sys.Date()`"
format: 
  html:
    html-table-processing: none
    toc: true
    toc-depth: 4
    toc-location: left
    number-sections: true
    code-fold: true
    code-summary: "Show Code"
    fig-cap-location: bottom
    smooth-scroll: true
    theme: flatly
    font-family: serif
    font-size: 12px
    line-height: 150%
    css: styles.css  # Reference your CSS file here
---

# Initialization
```{r include=FALSE}

require(dplyr)
require(sf)
require(sp)
require(tidyverse)
require(tidyterra)
require(terra)
require(ggplot2)
require(knitr)
require(gt)
require(scales)

```

```{r}

##### Create CSS file for scientific table format ####
cat("
.styled-table {
    width: 100%;
    border-collapse: collapse;
    font-family: serif;
    font-size: 12pt;
    color: black; /* Ensures all text is black */
}
.styled-table thead {
    background-color: #ffffff;
    font-weight: bold;
    border-bottom: 2px solid black;
    color: black; /* Ensures header text is black */
}
.styled-table th {
    font-weight: bold; /* Ensures column names are bold */
}
.styled-table th, .styled-table td {
    padding: 8px;
    text-align: center;
}
.styled-table tbody tr:nth-child(odd) {
    background-color: #ffffff;
}
.styled-table tbody tr:hover {
    background-color: #ffffff;
}
.styled-table td {
    border-bottom: 1px solid #ddd;
}
", file = "styles.css")

```


### Importing Data
```{r include=FALSE}

# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
base = normalizePath(file.path("..", ".."), mustWork = FALSE)  
analyses = file.path(base, "analyses")
inp = file.path(analyses, "inputs")
surv = read.csv(file.path(inp, "progover50.csv"))
surv # 155 responses with over 50% of questions answered
SSPROG = surv %>%
  count(surv$PROG) %>%
  rename(count = n) %>%
  mutate(proportion = count / 155)
SSPROG
psurv = read.csv(file.path(inp, "progunder50.csv"))
psurv # 59 responses with less than 50% of questions answered 
csurv = surv %>%
  filter(`PROG` >= 100) 
csurv # 146 responses with 100% of questions completed

```

# Summary Stats Only
```{r}

##### Calculating Age #### 
surv$AGE = 2025 - surv$DOB
psurv$AGE = 2025 - psurv$DOB
csurv$AGE = 2025 - csurv$DOB

########## Number of Respondents Selected / Options (RS) #######

splitCOUNTIES = surv %>%
  separate_rows(COUNTIES, sep = ",") %>%
  mutate(COUNTIES = trimws(COUNTIES))

totCOUNTIES = nrow(splitCOUNTIES)

RSCOUNTIES = splitCOUNTIES %>%
    count(COUNTIES) %>%
    rename(count = n) %>%
  mutate(proportion = count / totCOUNTIES)

sum(RSCOUNTIES$proportion)
RSCOUNTIES

###### Number of Response Options (SS) Selected / Respondent ######

splitCOUNTIES = surv %>%
  mutate(SSCOUNTIES = str_count(COUNTIES, ",") + 1)

COUNTIES = surv$COUNTIES
COUNTIES = na.omit(COUNTIES)
COUNTIES = COUNTIES[COUNTIES != ""]

SSCOUNTIES = splitCOUNTIES %>%
  count(SSCOUNTIES) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(COUNTIES))

sum(SSCOUNTIES$proportion)
SSCOUNTIES

SSsumCOUNTIES = SSCOUNTIES %>%
  summarise(
    mean = mean(SSCOUNTIES, na.rm = TRUE),
    sd = sd(SSCOUNTIES, na.rm = TRUE),
    median = median(SSCOUNTIES, na.rm = TRUE),
    mode = as.numeric(names(sort(table(SSCOUNTIES), decreasing = TRUE)[1])))

SSsumCOUNTIES

```
### Race & Ethnicity 
```{r}

RACE = surv$RACE
RACE = na.omit(RACE)
RACE = RACE[RACE != ""]

SSRACE = surv %>%
  count(surv$RACE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(RACE))

sum(SSRACE$proportion)
SSRACE

###############################################################################

ETHNICITY = surv$ETHNICITY
ETHNICITY = na.omit(ETHNICITY)
ETHNICITY = ETHNICITY[ETHNICITY != ""]

SSETHNICITY = surv %>%
  count(surv$ETHNICITY) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(ETHNICITY))

sum(SSETHNICITY$proportion)
SSETHNICITY


```

### Affiliation
```{r}

AFFILIATE = surv$AFFILIATE
AFFILIATE = na.omit(AFFILIATE)
AFFILIATE = AFFILIATE[AFFILIATE != ""]

SSAFFILIATE = surv %>%
  count(surv$AFFILIATE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(AFFILIATE))

sum(SSAFFILIATE$proportion)
SSAFFILIATE

```

### Activity
```{r}

ACTIVITY = surv$ACTIVITY
ACTIVITY = na.omit(ACTIVITY)
ACTIVITY = ACTIVITY[ACTIVITY != ""]

SSACTIVITY = surv %>%
  count(surv$ACTIVITY) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(ACTIVITY))

sum(SSACTIVITY$proportion)
SSACTIVITY

```

# Stat + survary Convert
## Demographics
### Age
```{r}

SSAGE = surv %>%
  summarise(
    mean = mean(AGE, na.rm = TRUE),
    sd = sd(AGE, na.rm = TRUE),
    median = median(AGE, na.rm = TRUE),
    mode = as.numeric(names(sort(table(AGE), decreasing = TRUE)[1])),
    min = min(AGE, na.rm = TRUE),
    max = max(AGE, na.rm = TRUE))
SSAGE

# Median = 37 
# 1 = older, 0 = younger
surv = surv %>%
  mutate(AGE = ifelse(AGE > 37, "1", "0"))

unique(surv$AGE)

```
### Gender
```{r}

GENDER = surv$GENDER
GENDER = na.omit(GENDER)
GENDER = GENDER[GENDER != ""]

SSGENDER = surv %>%
  count(surv$GENDER) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(GENDER))

sum(SSGENDER$proportion)
SSGENDER

unique(surv$GENDER)
# Female = 0, Male = 1
# Other/ I prefer not to answer = NA

surv$GENDERb[surv$GENDER == "Female"] = 0
surv$GENDERb[surv$GENDER == "Male"] = 1
surv$GENDERb[surv$GENDER == "I prefer not to answer"] = NA
surv$GENDERb[surv$GENDER == "Other"] = NA

unique(surv$GENDERb)


```

### Income
```{r}


INCOME = surv$INCOME
INCOME = na.omit(INCOME)
INCOME = INCOME[INCOME != ""]

SSINCOME = surv %>%
  count(surv$INCOME) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(INCOME))

sum(SSINCOME$proportion)
SSINCOME


unique(surv$INCOME)
# CUMULATIVE PROPORTION = 0.51533741 at $70,001-80,000
# 1 = higher, 0 = lower 

surv = surv %>%
  mutate(INCOME = na_if(INCOME, ""))

surv = surv %>%
  mutate(INCOME = case_when(
    INCOME %in% c("$0-20,000", "$20,001-30,000", "$30,001-40,000", 
                  "$40,001-50,000", "$50,001-60,000","$60,001-70,000") ~ 0,
    INCOME %in% c("$70,001-80,000", "$80,001-90,000", "$90,001-100,000", "$100,001+") ~ 1,
    TRUE ~ NA_real_ ))

unique(surv$INCOME)

```

## Experience & Expertise
### Related Coursework
```{r}

COURSE = surv$COURSE
COURSE = na.omit(COURSE)
COURSETIME = COURSE[COURSE != ""]

SSCOURSE = surv %>%
  count(surv$COURSE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(COURSE))

sum(SSCOURSE$proportion)
SSCOURSE


COURSETIME = surv$COURSETIME
COURSETIME = na.omit(COURSETIME)
COURSETIME = COURSETIME[COURSETIME != ""]

SSCOURSETIME = surv %>%
  count(surv$COURSETIME) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(COURSETIME))

sum(SSCOURSETIME$proportion)
SSCOURSETIME

unique(surv$COURSE)
# Yes = 1 , No = 0

surv = surv %>%
  mutate(COURSE = na_if(COURSE, ""))

surv$COURSE[surv$COURSE == "No"] = 0
surv$COURSE[surv$COURSE == "Yes"] = 1

unique(surv$COURSE)

# CUMULATIVE PROPORTION OF < 5 years & 5-10 years = 0.5555556
# > 10 years = 0 , <5 - 10 = 1 

unique(surv$COURSETIME)

surv$COURSETIME[surv$COURSETIME == ">10 years"] = 0
surv$COURSETIME[surv$COURSETIME == "5-10 years"] = 1
surv$COURSETIME[surv$COURSETIME == "<5 years"] = 1

unique(surv$COURSETIME)

# Yes = 1 , No = 0

surv = surv %>%
  mutate(COURSE = na_if(COURSE, ""))

surv$COURSE[surv$COURSE == "No"] = 0
surv$COURSE[surv$COURSE == "Yes"] = 1

```

### TWS Certified
```{r}

TWS = surv$TWS
TWS = na.omit(TWS)
TWS = TWS[TWS != ""]

SSTWS = surv %>%
  count(surv$TWS) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(TWS))

sum(SSTWS$proportion)
SSTWS

# Yes = 1 , No = 0

surv = surv %>%
  mutate(TWS = na_if(TWS, ""))

surv$TWS[surv$TWS == "No"] = 0
surv$TWS[surv$TWS == "Yes"] = 1

unique(surv$TWS)

```

### Self Bio Title
```{r}

SELFTITLE = surv$SELFTITLE
SELFTITLE = na.omit(SELFTITLE)
SELFTITLE = SELFTITLE[SELFTITLE != ""]

SSSELFTITLE = surv %>%
  count(surv$SELFTITLE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(SELFTITLE))

sum(SSSELFTITLE$proportion)
SSSELFTITLE

# Yes = 1 , No = 0

surv = surv %>%
  mutate(SELFTITLE = na_if(SELFTITLE, ""))

surv$SELFTITLE[surv$SELFTITLE == "No"] = 0
surv$SELFTITLE[surv$SELFTITLE == "Yes"] = 1

unique(surv$SELFTITLE)

```

### Hunting License
```{r}

LICENSE = surv$LICENSE
LICENSE = na.omit(LICENSE)
LICENSE = LICENSE[LICENSE != ""]

SSLICENSE = surv %>%
  count(surv$LICENSE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(LICENSE))

sum(SSLICENSE$proportion)
SSLICENSE

# Yes = 1 , No = 0

surv = surv %>%
  mutate(LICENSE = na_if(LICENSE, ""))

surv$LICENSE[surv$LICENSE == "No"] = 0
surv$LICENSE[surv$LICENSE == "Yes"] = 1

unique(surv$LICENSE)

```

### Education
```{r}

EDUCATION = surv$EDUCATION
EDUCATION = na.omit(EDUCATION)
EDUCATION = EDUCATION[EDUCATION != ""]

SSEDUCATION = surv %>%
  count(surv$EDUCATION) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(EDUCATION))

sum(SSEDUCATION$proportion)
SSEDUCATION

# CUMULATIVE PROPORTION =  0.19018405 for Some College/AA or AS (2-year degree) and 0.613496933	at College Graduate/BA or BS (4-year degree)
# logical = D, E, F / A, B, C
# 1 = more educated / 0 = less educated 
unique(surv$EDUCATION)

surv = surv %>%
  mutate(EDUCATION = na_if(EDUCATION, ""))

surv$EDUCATION[surv$EDUCATION == "Did not graduate high school/no GED"] = 0
surv$EDUCATION[surv$EDUCATION == "High school graduate/GED"] = 0
surv$EDUCATION[surv$EDUCATION == "Technical/Vocational School"] = 0
surv$EDUCATION[surv$EDUCATION == "Some College/AA or AS (2-year degree)"] = 1
surv$EDUCATION[surv$EDUCATION == "College Graduate/BA or BS (4-year degree)"] = 1
surv$EDUCATION[surv$EDUCATION == "Graduate or Professional School"] = 1

unique(surv$EDUCATION)
```

### Degree
```{r}

DEGREE = surv$DEGREE
DEGREE = na.omit(DEGREE)
DEGREE = DEGREE[DEGREE != ""]

SSDEGREE = surv %>%
  count(surv$DEGREE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(DEGREE))

sum(SSDEGREE$proportion)
SSDEGREE
unique(surv$DEGREE)
# yes = 1 / no = 0 

surv = surv %>%
  mutate(DEGREE = na_if(DEGREE, ""))

surv$DEGREE[surv$DEGREE == "No"] = 0
surv$DEGREE[surv$DEGREE == "Yes"] = 1

unique(surv$DEGREE)
```

### Biology Work Time
```{r}

BIOTIME = surv$BIOTIME
BIOTIME = na.omit(BIOTIME)
BIOTIME = BIOTIME[BIOTIME != ""]

SSBIOTIME = surv %>%
  count(surv$BIOTIME) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(BIOTIME))

sum(SSBIOTIME$proportion)
SSBIOTIME


# CUMULATIVE PROPORTION = 0.4907975 for 1-5 years and 0.6748466 5-10 years
# 5 responses - logic - "5-10" year cutoff

# >10 years = 1 / <5 years = 0 

surv$BIOTIME[surv$BIOTIME == "<1 year"] = 0
surv$BIOTIME[surv$BIOTIME == "1-5 years"] = 0
surv$BIOTIME[surv$BIOTIME == "5-10 years"] = 1
surv$BIOTIME[surv$BIOTIME == "10-20 years"] = 1
surv$BIOTIME[surv$BIOTIME == ">20 years"] = 1

unique(surv$BIOTIME)

```

## Activity and Practices

### Counties 
```{r}

# median = 12 
# number of response responses selected by participant

# responses selected
surv$COUNTIEScount = sapply(strsplit(surv$COUNTIES, ","), length)

# more/less than median/mean/middle
surv$COUNTIES = ifelse(surv$COUNTIEScount >= 12, 1, 0)

unique(surv$COUNTIES)
unique(surv$COUNTIEScount)

```

### Contact
```{r}

CONTACT = surv$CONTACT
CONTACT = na.omit(CONTACT)
CONTACT = CONTACT[CONTACT != ""]

SSCONTACT = surv %>%
  count(surv$CONTACT) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(CONTACT))

sum(SSCONTACT$proportion)
SSCONTACT

# Daily, Weekly, Monthly = More Risk
# Rarely, Never = Less Risk

surv = surv %>%
  mutate(CONTACT = na_if(CONTACT, ""))

surv$CONTACT[surv$CONTACT ==      "Daily"] = 1
surv$CONTACT[surv$CONTACT ==    "Weekly"] = 1
surv$CONTACT[surv$CONTACT ==    "Monthly"] = 1
surv$CONTACT[surv$CONTACT ==    "Rarely"] = 0
surv$CONTACT[surv$CONTACT ==     "Never"] = 0

unique(surv$CONTACT)
```

### Handle Animal/Sample
```{r}

HANDLE = surv$HANDLE
HANDLE = na.omit(HANDLE)
HANDLE = HANDLE[HANDLE != ""]

SSHANDLE = surv %>%
  count(surv$HANDLE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(HANDLE))

sum(SSHANDLE$proportion)
SSHANDLE

# Yes = more
# no = less

surv = surv %>%
  mutate(HANDLE = na_if(HANDLE, ""))

surv$HANDLE[surv$HANDLE == "No"] = 0
surv$HANDLE[surv$HANDLE == "Yes"] = 1

unique(surv$HANDLE)

```

### State of Animal
```{r}

STATE = surv$STATE
STATE = na.omit(STATE)
STATE = STATE[STATE != ""]

SSSTATE = surv %>%
  count(surv$STATE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(STATE))

sum(SSSTATE$proportion)
SSSTATE

# Alive - sedated / not sedated = more 
# Dead - less

surv = surv %>%
  mutate(STATE = na_if(STATE, ""))

surv$STATE[surv$STATE == "Dead
"] = 0
surv$STATE[surv$STATE == "Alive - Sedated
"] = 1
surv$STATE[surv$STATE == "Alive - Not Sedated
"] = 1

unique(surv$STATE)

```

### Collect
```{r}

COLLECT = surv$COLLECT
COLLECT = na.omit(COLLECT)
COLLECT = COLLECT[COLLECT != ""]

SSCOLLECT = surv %>%
  count(surv$COLLECT) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(COLLECT))

sum(SSCOLLECT$proportion)
SSCOLLECT

unique(surv$COLLECT)
# Yes = more
# no = less

surv = surv %>%
  mutate(COLLECT = na_if(COLLECT, ""))

surv$COLLECT[surv$COLLECT == "No"] = 0
surv$COLLECT[surv$COLLECT == "Yes"] = 1

unique(surv$COLLECT)

```


### Field
```{r}

FIELD = surv$FIELD
FIELD = na.omit(FIELD)
FIELD = FIELD[FIELD != ""]

SSFIELD = surv %>%
  count(surv$FIELD) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(FIELD))

sum(SSFIELD$proportion)
SSFIELD



SSsumFIELD = surv %>%
  summarise(
    mean = mean(FIELD, na.rm = TRUE),
    sd = sd(FIELD, na.rm = TRUE),
    median = median(FIELD, na.rm = TRUE),
    mode = as.numeric(names(sort(table(FIELD), decreasing = TRUE)[1])))

SSsumFIELD

# Median = 50 
# 1 = more, 0 = less

surv = surv %>%
  mutate(FIELD = ifelse(FIELD > 50, "1", "0"))

unique(surv$FIELD)


```

### PPE Use
```{r}

PPE = surv$PPE
PPE = na.omit(PPE)
PPE = PPE[PPE != ""]

SSPPE = surv %>%
  count(surv$PPE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(PPE))

sum(SSPPE$proportion)
SSPPE

# No = 1 - Yes - 0 (risk)

surv = surv %>%
  mutate(PPE = na_if(PPE, ""))

surv$PPE[surv$PPE == "No
"] = 1
surv$PPE[surv$PPE == "Yes
"] = 0

unique(surv$PPE)

PPETIME = surv$PPETIME
PPETIME = na.omit(PPETIME)
PPETIME = PPETIME[PPETIME != ""]

SSPPETIME = surv %>%
  count(surv$PPETIME) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(PPETIME))

sum(SSPPETIME$proportion)
SSPPETIME

# logical split in responses ~ 75% (0) = less dangerous than 25% (1)

surv = surv %>%
  mutate(PPETIME = na_if(PPETIME, ""))

surv$PPETIME[surv$PPETIME == "Rarely (<25%)
"] = 1
surv$PPETIME[surv$PPETIME == "Sometimes (25%-75%)
"] = 1
surv$PPETIME[surv$PPETIME == "Usually (>75%)
"] = 0
surv$PPETIME[surv$PPETIME == "Always (100%)
"] = 0

unique(surv$PPETIME)


```

## Education/Meeting Interest
### Access
```{r}

ACCESS = surv$ACCESS
ACCESS = na.omit(ACCESS)
ACCESS = ACCESS[ACCESS != ""]

SSACCESS = surv %>%
  count(surv$ACCESS) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(ACCESS))

sum(SSACCESS$proportion)
SSACCESS

# Yes = 1 , No = 0

surv = surv %>%
  mutate(ACCESS = na_if(ACCESS, ""))

surv$ACCESS[surv$ACCESS == "No"] = 0
surv$ACCESS[surv$ACCESS == "Yes"] = 1

unique(surv$ACCESS)

```
### Interest
```{r}
INTEREST = surv$INTEREST
INTEREST = na.omit(INTEREST)
INTEREST = INTEREST[INTEREST != ""]

SSINTEREST = surv %>%
  count(surv$INTEREST) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(INTEREST))

sum(SSINTEREST$proportion)
SSINTEREST
# unsure / no = 0 
# yes = 1 

unique(surv$INTEREST)

surv = surv %>%
  mutate(INTEREST = na_if(INTEREST, ""))

surv$INTEREST[surv$INTEREST == "Yes"] = 1
surv$INTEREST[surv$INTEREST == "No"] = 0
surv$INTEREST[surv$INTEREST == "Unsure"] = 0

unique(surv$INTEREST)

```

### Free Information
```{r}

##### Number of Respondents Selected / Options (RS) #####

splitFREEINFO = surv  %>%
  separate_rows(FREEINFO, sep = ",") %>%
  mutate(FREEINFO = trimws(FREEINFO))

RSFREEINFO = splitFREEINFO %>%
    count(FREEINFO) %>%
  rename(count = n) %>%
  mutate(proportion = count / nrow(splitFREEINFO))

sum(RSFREEINFO$proportion)
RSFREEINFO

##### Number of Response Options Selected / Respondent (SS) #####

splitFREEINFO = surv %>%
  mutate(SSFREEINFO = str_count(FREEINFO, ",") + 1)

FREEINFO = surv$FREEINFO
FREEINFO = na.omit(FREEINFO)
FREEINFO = FREEINFO[FREEINFO != ""]

SSFREEINFO = splitFREEINFO %>%
  count(SSFREEINFO) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(FREEINFO))

sum(SSFREEINFO$proportion)
SSFREEINFO

SSsumFREEINFO = SSFREEINFO %>%
  summarise(
    mean = mean(SSFREEINFO, na.rm = TRUE),
    sd = sd(SSFREEINFO, na.rm = TRUE),
    median = median(SSFREEINFO, na.rm = TRUE),
    mode = as.numeric(names(sort(table(SSFREEINFO), decreasing = TRUE)[1])))

SSsumFREEINFO

# number of responses selected by participant
# Median selected = 3.5 

unique(surv$FREEINFO)


# responses selected
surv$FREEINFOcount = sapply(strsplit(surv$FREEINFO, ","), length)

# more/less than median/mean/middle
surv$FREEINFO = ifelse(surv$FREEINFOcount >= 3.5, 1, 0)


unique(surv$FREEINFO)
unique(surv$FREEINFOcount)

```

### Topics
```{r}

###### Number of Respondents Selected / Options ######

splitTOPICS = surv  %>%
  separate_rows(TOPICS, sep = ",") %>%
  mutate(TOPICS = trimws(TOPICS))

TOPICS = na.omit(splitTOPICS)
totTOPICS = length(TOPICS)

RSTOPICS = splitTOPICS %>%
    count(TOPICS) %>%
  rename(count = n) %>%
  mutate(proportion = count / nrow(splitTOPICS))

sum(RSTOPICS$proportion)
RSTOPICS

###### Number of Options Selected / Respondent ######

splitTOPICS = surv %>%
  mutate(SSTOPICS = str_count(TOPICS, ",") + 1)

TOPICS = surv$TOPICS
TOPICS = na.omit(TOPICS)
TOPICS = TOPICS[TOPICS != ""]

SSTOPICS = splitTOPICS %>%
  count(SSTOPICS) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(TOPICS))

sum(SSTOPICS$proportion)
SSTOPICS

SSsumTOPICS = SSTOPICS %>%
  summarise(
    mean = mean(SSTOPICS, na.rm = TRUE),
    sd = sd(SSTOPICS, na.rm = TRUE),
    median = median(SSTOPICS, na.rm = TRUE),
    mode = as.numeric(names(sort(table(SSTOPICS), decreasing = TRUE)[1])))

SSsumTOPICS


# TOPICS selected by each participant
# median 5 - above/below
# TOPICS2

# SSs selected
surv$TOPICScount = sapply(strsplit(surv$TOPICS, ","), length)

# more/less than median/mean/middle
surv$TOPICS = ifelse(surv$TOPICScount >= 5, 1, 0)

unique(surv$TOPICS)
unique(surv$TOPICScount)

```


### Source
```{r}

##### Number of respondents selected / Options ####
splitSOURCE = surv  %>%
  separate_rows(SOURCE, sep = ",") %>%
  mutate(SOURCE = trimws(SOURCE))

RSSOURCE = splitSOURCE %>%
    count(SOURCE) %>%
  rename(count = n) %>%
  mutate(proportion = count / nrow(splitSOURCE))

sum(RSSOURCE$proportion)
RSSOURCE

##### Number of Response Options Selected / Respondent ####

splitSOURCE = surv %>%
  mutate(SSSOURCE = str_count(SOURCE, ",") + 1)

SOURCE = surv$SOURCE
SOURCE = na.omit(SOURCE)
SOURCE = SOURCE[SOURCE != ""]

SSSOURCE = splitSOURCE %>%
  count(SSSOURCE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(SOURCE))

sum(SSSOURCE$proportion)
SSSOURCE

SSsumSOURCE = SSSOURCE %>%
  summarise(
    mean = mean(SSSOURCE, na.rm = TRUE),
    sd = sd(SSSOURCE, na.rm = TRUE),
    median = median(SSSOURCE, na.rm = TRUE),
    mode = as.numeric(names(sort(table(SSSOURCE), decreasing = TRUE)[1])))

SSsumSOURCE

# SOURCE selected by each participant
# median 3,5- above/below
# SOURCE2

# responses selected
surv$SOURCEcount = sapply(strsplit(surv$SOURCE, ","), length)

# more/less than median/mean/middle
surv$SOURCE = ifelse(surv$SOURCEcount >= 3.5, 1, 0)

unique(surv$SOURCE)
unique(surv$SOURCEcount)

```


## Knowledge
### Correct/Incorrect
#### Pigs
```{r}

PIGS = surv$PIGS
PIGS = na.omit(PIGS)
PIGS = PIGS[PIGS != ""]

SSPIGS = surv %>%
  count(surv$PIGS) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(PIGS))

sum(SSPIGS$proportion)
SSPIGS

# Correct Answer = 1, I don't kNow and incorrect = 0 
surv$PIGSp = surv$PIGS
unique(surv$PIGS)
# TRUE = 1
# FALSE = 0
# I don't kNow = 0

surv = surv %>%
  mutate(PIGS = na_if(PIGS, ""))

surv$PIGS[surv$PIGS ==         "TRUE"] = 1
surv$PIGS[surv$PIGS ==        "FALSE"] = 0
surv$PIGS[surv$PIGS == "I don't kNow"] = 0

unique(surv$PIGS)
```

#### Brucellosis
```{r}

BRUCE = surv$BRUCE
BRUCE = na.omit(BRUCE)
BRUCE = BRUCE[BRUCE != ""]

SSBRUCE = surv %>%
  count(surv$BRUCE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(BRUCE))

sum(SSBRUCE$proportion)
SSBRUCE



surv$BRUCEp = surv$BRUCE

# TRUE = 0
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(BRUCE = na_if(BRUCE, ""))

surv$BRUCE[surv$BRUCE ==         "TRUE"] = 0
surv$BRUCE[surv$BRUCE ==        "FALSE"] = 1
surv$BRUCE[surv$BRUCE == "I don't kNow"] = 0

unique(surv$BRUCE)
```

#### CWD
```{r}
CWD = surv$CWD
CWD = na.omit(CWD)
CWD = CWD[CWD != ""]

SSCWD = surv %>%
  count(surv$CWD) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(CWD))

sum(SSCWD$proportion)
SSCWD


surv$CWDp = surv$CWD
unique(surv$CWD)
# TRUE = 0
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(CWD = na_if(CWD, ""))

surv$CWD[surv$CWD ==         "TRUE"] = 0
surv$CWD[surv$CWD ==        "FALSE"] = 1
surv$CWD[surv$CWD == "I don't kNow"] = 0

unique(surv$CWD)

```

#### Flu Alabama
```{r}

FLUAL = surv$FLUAL
FLUAL = na.omit(FLUAL)
FLUAL = FLUAL[FLUAL != ""]

SSFLUAL = surv %>%
  count(surv$FLUAL) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(FLUAL))

sum(SSFLUAL$proportion)
SSFLUAL


surv$FLUALp = surv$FLUAL
# TRUE = 1
# FALSE = 0
# I don't kNow = 0

surv = surv %>%
  mutate(FLUAL = na_if(FLUAL, ""))

surv$FLUAL[surv$FLUAL ==         "TRUE"] = 1
surv$FLUAL[surv$FLUAL ==        "FALSE"] = 0
surv$FLUAL[surv$FLUAL == "I don't kNow"] = 0

unique(surv$FLUAL)
```

#### Flu
```{r}
FLU = surv$FLU
FLU = na.omit(FLU)
FLU = FLU[FLU != ""]

SSFLU = surv %>%
  count(surv$FLU) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(FLU))

sum(SSFLU$proportion)
SSFLU


surv$FLUp = surv$FLU
# TRUE = 0
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(FLU = na_if(FLU, ""))

surv$FLU[surv$FLU ==         "TRUE"] = 0
surv$FLU[surv$FLU ==        "FALSE"] = 1
surv$FLU[surv$FLU == "I don't kNow"] = 0

unique(surv$FLU)

```

#### COVID
```{r}

COVID = surv$COVID
COVID = na.omit(COVID)
COVID = COVID[COVID != ""]

SSCOVID = surv %>%
  count(surv$COVID) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(COVID))

sum(SSCOVID$proportion)
SSCOVID


surv$COVIDp = surv$COVID
# TRUE = 1
# FALSE = 0
# I don't kNow = 0

surv = surv %>%
  mutate(COVID = na_if(COVID, ""))

surv$COVID[surv$COVID ==         "TRUE"] = 1
surv$COVID[surv$COVID ==        "FALSE"] = 0
surv$COVID[surv$COVID == "I don't kNow"] = 0

unique(surv$COVID)

```

#### COVID Spillover
```{r}

COVIDSPILL = surv$COVIDSPILL
COVIDSPILL = na.omit(COVIDSPILL)
COVIDSPILL = COVIDSPILL[COVIDSPILL != ""]

SSCOVIDSPILL = surv %>%
  count(surv$COVIDSPILL) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(COVIDSPILL))

sum(SSCOVIDSPILL$proportion)
SSCOVIDSPILL



surv$COVIDSPILLp = surv$COVIDSPILL
# TRUE = 0
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(COVIDSPILL = na_if(COVIDSPILL, ""))

surv$COVIDSPILL[surv$COVIDSPILL ==         "TRUE"] = 0
surv$COVIDSPILL[surv$COVIDSPILL ==        "FALSE"] = 1
surv$COVIDSPILL[surv$COVIDSPILL == "I don't kNow"] = 0

unique(surv$COVIDSPILL)

```

#### Rabies AL
```{r}

RABIESAL = surv$RABIESAL
RABIESAL = na.omit(RABIESAL)
RABIESAL = RABIESAL[RABIESAL != ""]

SSRABIESAL = surv %>%
  count(surv$RABIESAL) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(RABIESAL))

sum(SSRABIESAL$proportion)
SSRABIESAL



surv$RABIESALp = surv$RABIESAL
# TRUE = 0
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(RABIESAL = na_if(RABIESAL, ""))

surv$RABIESAL[surv$RABIESAL ==         "TRUE"] = 0
surv$RABIESAL[surv$RABIESAL ==        "FALSE"] = 1
surv$RABIESAL[surv$RABIESAL == "I don't kNow"] = 0

unique(surv$RABIESAL)

```

#### Rabies Transmission
```{r}

RABIES = surv$RABIES
RABIES = na.omit(RABIES)
RABIES = RABIES[RABIES != ""]

SSRABIES = surv %>%
  count(surv$RABIES) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(RABIES))

sum(SSRABIES$proportion)
SSRABIES



surv$RABIESp = surv$RABIES
# Bites = 1
# Blood, Arthropods, Urine, Feces, I don't kNow = 0 

surv = surv %>%
  mutate(RABIES = na_if(RABIES, ""))

surv$RABIES[surv$RABIES ==        "Bites"] = 1
surv$RABIES[surv$RABIES ==        "Blood"] = 0
surv$RABIES[surv$RABIES == "I don't kNow"] = 0
surv$RABIES[surv$RABIES ==   "Anthropods"] = 0
surv$RABIES[surv$RABIES ==        "Urine"] = 0
surv$RABIES[surv$RABIES ==        "Feces"] = 0

unique(surv$RABIES)

```

#### Turkey Disposal
```{r}

TURKEY = surv$TURKEY
TURKEY = na.omit(TURKEY)
TURKEY = TURKEY[TURKEY != ""]

SSTURKEY = surv %>%
  count(surv$TURKEY) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(TURKEY))

sum(SSTURKEY$proportion)
SSTURKEY


surv$TURKEYp = surv$TURKEY
# Incinerate = 1

surv = surv %>%
  mutate(TURKEY = na_if(TURKEY, ""))

surv$TURKEY[surv$TURKEY ==     "Incinerate"] = 1
surv$TURKEY[surv$TURKEY ==      "Bury"] = 0
surv$TURKEY[surv$TURKEY =="Field dress and consumption"] = 0
surv$TURKEY[surv$TURKEY ==   "I don't kNow"] = 0
surv$TURKEY[surv$TURKEY == "Place in a dumpster"] = 0
surv$TURKEY[surv$TURKEY ==       "IgNore"] = 0

unique(surv$TURKEY)

```
#### Accuracy: # Correct
```{r}

surv[, c("PIGS", "BRUCE", "CWD", "FLUAL", "FLU", "COVID", "COVIDSPILL", "RABIESAL", "RABIES", "TURKEY")] = 
  lapply(surv[, c("PIGS", "BRUCE", "CWD", "FLUAL", "FLU", "COVID", "COVIDSPILL", "RABIESAL", "RABIES",
  "TURKEY")], as.numeric)

surv$CORRECT = rowSums(surv[, c("PIGS", "BRUCE", "CWD", "FLUAL", "FLU", "COVID", "COVIDSPILL", "RABIESAL", "RABIES", "TURKEY")], na.rm = TRUE)

# median # correct answers = 7 
medcorrect = median(surv$CORRECT)
medcorrect

SScorrect <- surv %>%
  summarise(
    mean_correct   = mean(CORRECT, na.rm = TRUE),
    median_correct = median(CORRECT, na.rm = TRUE),
    sd_correct     = sd(CORRECT, na.rm = TRUE),
    min_correct    = min(CORRECT, na.rm = TRUE),
    max_correct    = max(CORRECT, na.rm = TRUE),
    n_nonmissing   = sum(!is.na(CORRECT)))
SScorrect


# More knowledgeable = 1 ~ less knowledgeable = 0 
surv$CORRECTmed = ifelse(surv$CORRECT >= 6, 1, 0)
surv$CORRECT50 = ifelse(surv$CORRECT > 5, 1, 0)

```

### Certainty
#### Pigs
```{r}
# TRUE = 1
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(PIGSp = na_if(PIGSp, ""))

surv$PIGSp[surv$PIGSp ==         "TRUE"] = 1
surv$PIGSp[surv$PIGSp ==        "FALSE"] = 1
surv$PIGSp[surv$PIGSp == "I don't kNow"] = 0

unique(surv$PIGSp)
```

#### Brucellosis
```{r}
# TRUE = 1
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(BRUCEp = na_if(BRUCEp, ""))

surv$BRUCEp[surv$BRUCEp ==         "TRUE"] = 1
surv$BRUCEp[surv$BRUCEp ==        "FALSE"] = 1
surv$BRUCEp[surv$BRUCEp == "I don't kNow"] = 0

unique(surv$BRUCEp)

```

#### CWD
```{r}
# TRUE = 1
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(CWDp = na_if(CWDp, ""))

surv$CWDp[surv$CWDp ==         "TRUE"] = 1
surv$CWDp[surv$CWDp ==        "FALSE"] = 1
surv$CWDp[surv$CWDp == "I don't kNow"] = 0

unique(surv$CWDp)

```

#### Flu Alabama
```{r}
# TRUE = 1
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(FLUALp = na_if(FLUALp, ""))

surv$FLUALp[surv$FLUALp ==         "TRUE"] = 1
surv$FLUALp[surv$FLUALp ==        "FALSE"] = 1
surv$FLUALp[surv$FLUALp == "I don't kNow"] = 0

unique(surv$FLUALp)

```

#### Flu
```{r}
# TRUE = 1
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(FLUp = na_if(FLUp, ""))

surv$FLUp[surv$FLUp ==         "TRUE"] = 1
surv$FLUp[surv$FLUp ==        "FALSE"] = 1
surv$FLUp[surv$FLUp == "I don't kNow"] = 0
unique(surv$FLUp)

```

#### COVID
```{r}
# TRUE = 1
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(COVIDp = na_if(COVIDp, ""))

surv$COVIDp[surv$COVIDp ==         "TRUE"] = 1
surv$COVIDp[surv$COVIDp ==        "FALSE"] = 1
surv$COVIDp[surv$COVIDp == "I don't kNow"] = 0

unique(surv$COVIDp)

```

#### COVID Spillover
```{r}
# TRUE = 1
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(COVIDSPILLp = na_if(COVIDSPILLp, ""))

surv$COVIDSPILLp[surv$COVIDSPILLp ==         "TRUE"] = 1
surv$COVIDSPILLp[surv$COVIDSPILLp ==        "FALSE"] = 1
surv$COVIDSPILLp[surv$COVIDSPILLp == "I don't kNow"] = 0

unique(surv$COVIDSPILLp)

```

#### Rabies AL
```{r}
# TRUE = 1
# FALSE = 1
# I don't kNow = 0

surv = surv %>%
  mutate(RABIESALp = na_if(RABIESALp, ""))

surv$RABIESALp[surv$RABIESALp ==         "TRUE"] = 1
surv$RABIESALp[surv$RABIESALp ==        "FALSE"] = 1
surv$RABIESALp[surv$RABIESALp == "I don't kNow"] = 0

unique(surv$RABIESALp)

```

#### Rabies Transmission
```{r}
# Bites, Blood, Arthropods, Urine, Feces = 1
# I don't kNow = 0 

surv = surv %>%
  mutate(RABIESp = na_if(RABIESp, ""))

surv$RABIESp[surv$RABIESp ==        "Bites"] = 1
surv$RABIESp[surv$RABIESp ==        "Blood"] = 1
surv$RABIESp[surv$RABIESp == "I don't kNow"] = 0
surv$RABIESp[surv$RABIESp ==   "Anthropods"] = 1
surv$RABIESp[surv$RABIESp ==        "Urine"] = 1
surv$RABIESp[surv$RABIESp ==        "Feces"] = 1

unique(surv$RABIESp)

```

#### Turkey Disposal
```{r}
# Incinerate, bury, field dress and consumption, place in dumpster, ignore = 1
# I don't kNow = 0 

surv = surv %>%
  mutate(TURKEYp = na_if(TURKEYp, ""))

surv$TURKEYp[surv$TURKEYp ==     "Incinerate"] = 1
surv$TURKEYp[surv$TURKEYp ==      "Bury"] = 1
surv$TURKEYp[surv$TURKEYp == "Field dress and consumption"] = 1
surv$TURKEYp[surv$TURKEYp ==   "I don't kNow"] = 0
surv$TURKEYp[surv$TURKEYp == "Place in a dumpster"] = 1
surv$TURKEYp[surv$TURKEYp ==       "IgNore"] = 1

unique(surv$TURKEYp)

```

#### Perception: # Known
```{r}

surv[, c("PIGSp", "BRUCEp", "CWDp", "FLUALp", "FLUp", "COVIDp", "COVIDSPILLp", "RABIESALp", "RABIESp", "TURKEYp")] = lapply(surv[, c("PIGSp", "BRUCEp", "CWDp", "FLUALp", "FLUp", "COVIDp", "COVIDSPILLp", "RABIESALp", "RABIESp", "TURKEYp")], as.numeric)

surv$CERTAINTY = rowSums(surv[, c("PIGSp", "BRUCEp", "CWDp", "FLUALp", "FLUp", "COVIDp", "COVIDSPILLp", "RABIESALp", "RABIESp", "TURKEYp")])

# median # certain answers = 9
certainmed = median(surv$CERTAINTY)
certainmed

# More certain = 1 ~ less certain = 0 
surv$CERTAINmed = ifelse(surv$CERTAINTY >= 9, 1, 0)
surv$CERTAIN50 = ifelse(surv$CERTAINTY > 5, 1, 0)

```


## Attitudes 
### Agreement = more
#### CWD AL
```{r}

CWDAL = surv$CWDAL
CWDAL = na.omit(CWDAL)
CWDAL = CWDAL[CWDAL != ""]

SSCWDAL = surv %>%
  count(surv$CWDAL) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(CWDAL))

sum(SSCWDAL$proportion)
SSCWDAL


# Strongly agree, Agree = 1
# Neutral , Disagree, Strongly disagree = 0

surv = surv %>%
  mutate(CWDAL = na_if(CWDAL, ""))

surv$CWDAL[surv$CWDAL ==      "Strongly Agree"] = 1
surv$CWDAL[surv$CWDAL ==               "Agree"] = 1
surv$CWDAL[surv$CWDAL ==             "Neutral"] = 0
surv$CWDAL[surv$CWDAL ==            "Disagree"] = 0
surv$CWDAL[surv$CWDAL ==   "Strongly Disagree"] = 0

unique(surv$CWDAL)

```

#### Bats 
```{r}

BATS = surv$BATS
BATS = na.omit(BATS)
BATS = BATS[BATS != ""]

SSBATS = surv %>%
  count(surv$BATS) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(BATS))

sum(SSBATS$proportion)
SSBATS


surv = surv %>%
  mutate(BATS = na_if(BATS, ""))

surv$BATS[surv$BATS ==      "Strongly Agree"] = 1
surv$BATS[surv$BATS ==               "Agree"] = 1
surv$BATS[surv$BATS ==             "Neutral"] = 0
surv$BATS[surv$BATS ==            "Disagree"] = 0
surv$BATS[surv$BATS ==   "Strongly Disagree"] = 0

unique(surv$BATS)

```

### PPE Requirement
```{r}

PPEREQ = surv$PPEREQ
PPEREQ = na.omit(PPEREQ)
PPEREQ = PPEREQ[PPEREQ != ""]

SSPPEREQ = surv %>%
  count(surv$PPEREQ) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(PPEREQ))

sum(SSPPEREQ$proportion)
SSPPEREQ


surv = surv %>%
  mutate(PPEREQ = na_if(PPEREQ, ""))

surv$PPEREQ[surv$PPEREQ ==      "Strongly Agree"] = 1
surv$PPEREQ[surv$PPEREQ ==               "Agree"] = 1
surv$PPEREQ[surv$PPEREQ ==             "Neutral"] = 0
surv$PPEREQ[surv$PPEREQ ==            "Disagree"] = 0
surv$PPEREQ[surv$PPEREQ ==   "Strongly Disagree"] = 0

unique(surv$PPEREQ)
```

#### EHD
```{r}

EHD = surv$EHD
EHD = na.omit(EHD)
EHD = EHD[EHD != ""]

SSEHD = surv %>%
  count(surv$EHD) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(EHD))

sum(SSEHD$proportion)
SSEHD


surv = surv %>%
  mutate(EHD = na_if(EHD, ""))

surv$EHD[surv$EHD ==      "Strongly Agree"] = 1
surv$EHD[surv$EHD ==               "Agree"] = 1
surv$EHD[surv$EHD ==             "Neutral"] = 0
surv$EHD[surv$EHD ==            "Disagree"] = 0
surv$EHD[surv$EHD ==   "Strongly Disagree"] = 0

unique(surv$EHD)

```

#### Surveillance
```{r}

SURVEY = surv$SURVEY
SURVEY = na.omit(SURVEY)
SURVEY = SURVEY[SURVEY != ""]

SSSURVEY = surv %>%
  count(surv$SURVEY) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(SURVEY))

sum(SSSURVEY$proportion)
SSSURVEY

surv = surv %>%
  mutate(SURVEY = na_if(SURVEY, ""))

surv$SURVEY[surv$SURVEY ==      "Strongly Agree"] = 1
surv$SURVEY[surv$SURVEY ==               "Agree"] = 1
surv$SURVEY[surv$SURVEY ==             "Neutral"] = 0
surv$SURVEY[surv$SURVEY ==            "Disagree"] = 0
surv$SURVEY[surv$SURVEY ==   "Strongly Disagree"] = 0

unique(surv$SURVEY)

```

#### Vaccine
```{r}

VACCINE = surv$VACCINE
VACCINE = na.omit(VACCINE)
VACCINE = VACCINE[VACCINE != ""]

SSVACCINE = surv %>%
  count(surv$VACCINE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(VACCINE))

sum(SSVACCINE$proportion)
SSVACCINE


surv = surv %>%
  mutate(VACCINE = na_if(VACCINE, ""))

surv$VACCINE[surv$VACCINE ==      "Strongly Agree"] = 1
surv$VACCINE[surv$VACCINE ==               "Agree"] = 1
surv$VACCINE[surv$VACCINE ==             "Neutral"] = 0
surv$VACCINE[surv$VACCINE ==            "Disagree"] = 0
surv$VACCINE[surv$VACCINE ==   "Strongly Disagree"] = 0

unique(surv$VACCINE)

```

#### Prevalence
```{r}

PREVAL = surv$PREVAL
PREVAL = na.omit(PREVAL)
PREVAL = PREVAL[PREVAL != ""]

SSPREVAL = surv %>%
  count(surv$PREVAL) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(PREVAL))

sum(SSPREVAL$proportion)
SSPREVAL

surv = surv %>%
  mutate(PREVAL = na_if(PREVAL, ""))

surv$PREVAL[surv$PREVAL ==      "Strongly Agree"] = 1
surv$PREVAL[surv$PREVAL ==               "Agree"] = 1
surv$PREVAL[surv$PREVAL ==             "Neutral"] = 0
surv$PREVAL[surv$PREVAL ==            "Disagree"] = 0
surv$PREVAL[surv$PREVAL ==   "Strongly Disagree"] = 0

unique(surv$PREVAL)

```

#### Diversity 
```{r}

DIVERSE = surv$DIVERSE
DIVERSE = na.omit(DIVERSE)
DIVERSE = DIVERSE[DIVERSE != ""]

SSDIVERSE = surv %>%
  count(surv$DIVERSE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(DIVERSE))

sum(SSDIVERSE$proportion)
SSDIVERSE

surv = surv %>%
  mutate(DIVERSE = na_if(DIVERSE, ""))

surv$DIVERSE[surv$DIVERSE ==      "Strongly Agree"] = 1
surv$DIVERSE[surv$DIVERSE ==               "Agree"] = 1
surv$DIVERSE[surv$DIVERSE ==             "Neutral"] = 0
surv$DIVERSE[surv$DIVERSE ==            "Disagree"] = 0
surv$DIVERSE[surv$DIVERSE ==   "Strongly Disagree"] = 0

unique(surv$DIVERSE)

```

#### Consequences 
```{r}

CONSEQ = surv$CONSEQ
CONSEQ = na.omit(CONSEQ)
CONSEQ = CONSEQ[CONSEQ != ""]

SSCONSEQ = surv %>%
  count(surv$CONSEQ) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(CONSEQ))

sum(SSCONSEQ$proportion)
SSCONSEQ


surv = surv %>%
  mutate(CONSEQ = na_if(CONSEQ, ""))

surv$CONSEQ[surv$CONSEQ ==      "Strongly Agree"] = 1
surv$CONSEQ[surv$CONSEQ ==               "Agree"] = 1
surv$CONSEQ[surv$CONSEQ ==             "Neutral"] = 0
surv$CONSEQ[surv$CONSEQ ==            "Disagree"] = 0
surv$CONSEQ[surv$CONSEQ ==   "Strongly Disagree"] = 0

unique(surv$CONSEQ)

```

#### Climate
```{r}

CLIMATE = surv$CLIMATE
CLIMATE = na.omit(CLIMATE)
CLIMATE = CLIMATE[CLIMATE != ""]

SSCLIMATE = surv %>%
  count(surv$CLIMATE) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(CLIMATE))

sum(SSCLIMATE$proportion)
SSCLIMATE


surv = surv %>%
  mutate(CLIMATE = na_if(CLIMATE, ""))

surv$CLIMATE[surv$CLIMATE ==      "Strongly Agree"] = 1
surv$CLIMATE[surv$CLIMATE ==               "Agree"] = 1
surv$CLIMATE[surv$CLIMATE ==             "Neutral"] = 0
surv$CLIMATE[surv$CLIMATE ==            "Disagree"] = 0
surv$CLIMATE[surv$CLIMATE ==   "Strongly Disagree"] = 0

unique(surv$CLIMATE)
```

#### Education Requirement
```{r}

EDREQ = surv$EDREQ
EDREQ = na.omit(EDREQ)
EDREQ = EDREQ[EDREQ != ""]

SSEDREQ = surv %>%
  count(surv$EDREQ) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(EDREQ))

sum(SSEDREQ$proportion)
SSEDREQ

surv = surv %>%
  mutate(EDREQ = na_if(EDREQ, ""))

surv$EDREQ[surv$EDREQ ==      "Strongly Agree"] = 1
surv$EDREQ[surv$EDREQ ==               "Agree"] = 1
surv$EDREQ[surv$EDREQ ==             "Neutral"] = 0
surv$EDREQ[surv$EDREQ ==            "Disagree"] = 0
surv$EDREQ[surv$EDREQ ==   "Strongly Disagree"] = 0

unique(surv$EDREQ)

```

#### Information
```{r}

INFO = surv$INFO
INFO = na.omit(INFO)
INFO = INFO[INFO != ""]

SSINFO = surv %>%
  count(surv$INFO) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(INFO))

sum(SSINFO$proportion)
SSINFO


surv = surv %>%
  mutate(INFO = na_if(INFO, ""))

surv$INFO[surv$INFO ==      "Strongly Agree"] = 1
surv$INFO[surv$INFO ==               "Agree"] = 1
surv$INFO[surv$INFO ==             "Neutral"] = 0
surv$INFO[surv$INFO ==            "Disagree"] = 0
surv$INFO[surv$INFO ==   "Strongly Disagree"] = 0

unique(surv$INFO)

```

#### Hands On
```{r}


HANDSON = surv$HANDSON
HANDSON = na.omit(HANDSON)
HANDSON = HANDSON[HANDSON != ""]

SSHANDSON = surv %>%
  count(surv$HANDSON) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(HANDSON))

sum(SSHANDSON$proportion)
SSHANDSON

surv = surv %>%
  mutate(HANDSON = na_if(HANDSON, ""))

surv$HANDSON[surv$HANDSON ==      "Strongly Agree"] = 1
surv$HANDSON[surv$HANDSON ==               "Agree"] = 1
surv$HANDSON[surv$HANDSON ==             "Neutral"] = 0
surv$HANDSON[surv$HANDSON ==            "Disagree"] = 0
surv$HANDSON[surv$HANDSON ==   "Strongly Disagree"] = 0

unique(surv$HANDSON)


```

### Disagreement = more
#### Darwin
```{r}

DARWIN = surv$DARWIN
DARWIN = na.omit(DARWIN)
DARWIN = DARWIN[DARWIN != ""]

SSDARWIN = surv %>%
  count(surv$DARWIN) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(DARWIN))

sum(SSDARWIN$proportion)
SSDARWIN


# Strongly agree, Agree = 0
# Neutral , Disagree, Strongly disagree = 1

surv = surv %>%
  mutate(DARWIN = na_if(DARWIN, ""))

surv$DARWIN[surv$DARWIN ==      "Strongly Agree"] = 0
surv$DARWIN[surv$DARWIN ==               "Agree"] = 0
surv$DARWIN[surv$DARWIN ==             "Neutral"] = 0
surv$DARWIN[surv$DARWIN ==            "Disagree"] = 1
surv$DARWIN[surv$DARWIN ==   "Strongly Disagree"] = 1

unique(surv$DARWIN)
```

#### Population Reduction
```{r}
POPRED = surv$POPRED
POPRED = na.omit(POPRED)
POPRED = POPRED[POPRED != ""]

SSPOPRED = surv %>%
  count(surv$POPRED) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(POPRED))

sum(SSPOPRED$proportion)
SSPOPRED


surv = surv %>%
  mutate(POPRED = na_if(POPRED, ""))

surv$POPRED[surv$POPRED ==       "Strongly Agree"] = 0
surv$POPRED[surv$POPRED ==                "Agree"] = 0
surv$POPRED[surv$POPRED ==              "Neutral"] = 0
surv$POPRED[surv$POPRED ==             "Disagree"] = 1
surv$POPRED[surv$POPRED ==    "Strongly Disagree"] = 1

unique(surv$POPRED)

```

#### Population Plan
```{r}

POPPLAN = surv$POPPLAN
POPPLAN = na.omit(POPPLAN)
POPPLAN = POPPLAN[POPPLAN != ""]

SSPOPPLAN = surv %>%
  count(surv$POPPLAN) %>%
  rename(count = n) %>%
  mutate(proportion = count / length(POPPLAN))

sum(SSPOPPLAN$proportion)
SSPOPPLAN


surv = surv %>%
  mutate(POPPLAN = na_if(POPPLAN, ""))

surv$POPPLAN[surv$POPPLAN ==      "Strongly Agree"] = 0
surv$POPPLAN[surv$POPPLAN ==               "Agree"] = 0
surv$POPPLAN[surv$POPPLAN ==             "Neutral"] = 0
surv$POPPLAN[surv$POPPLAN ==            "Disagree"] = 1
surv$POPPLAN[surv$POPPLAN ==   "Strongly Disagree"] = 1

unique(surv$POPPLAN)

```


# Write CSV
```{r}
#| include: false

###### Binary Response CSV ######
oup = file.path(analyses, "outputs")
write.csv(surv, file.path(oup, "binaryCombined.csv"), row.names = FALSE)

```

```{r}
#| echo: false

##### CSS Tables #####
# kable(RSCOUNTIES, format = "html", table.attr = "class='styled-table'", align = "c")

```


## Technical References
```{r bib}
#| echo: false

#### To write a bib file
# knitr::write_bib(sub("^package:", "", grep("package", search(), value=TRUE)), file='pckg.bib')

#### to display the packages within the .qmd without creating another .bib ####
knitr::write_bib(sub("^package:", "", grep("package", search(), value=TRUE)), file='')

```
